; supervisor config file, see documentation at
; http://supervisord.org/configuration.html
; if installed by apt-get, install this file at /etc/supervisor/conf.d


; ==================================
;  rabbitmq
;  use only if service not in init.d
; ==================================

[program:rabbitmq]
command=rabbitmq-server
user=app
directory=/home/app/edu
stdout_logfile=/home/app/log/rabbitmq.log
redirect_stderr=true
autostart=false
autorestart=true


; ==================================
;  ngrok
; ==================================

[program:ngrok]
command=ngrok http -log=stdout 8000
user=app
directory=/home/app/edu
stdout_logfile=/home/app/log/ngrok.log
redirect_stderr=true
autostart=true
autorestart=true
startsecs=10


; Os programas abaixo s√£o todos python
; Configure o caminho completo se utilizando virtualenv

; ==================================
;  webhooks
; ==================================

[program:webhooks]
command=/usr/local/miniconda2/envs/edu/bin/gunicorn webhooks:app -b localhost:8000
user=app
directory=/home/app/edu
stdout_logfile=/home/app/log/webhooks.log
redirect_stderr=true
autostart=true
autorestart=true
startsecs=10


; ==================================
;  celery workers
; ==================================

[program:celery.processor]
command=/usr/local/miniconda2/envs/edu/bin/celery worker -A workers -n processor@%%n --concurrency 4 --loglevel=DEBUG
directory=/home/app/edu
user=app
numprocs=1
stdout_logfile=/home/app/log/celery.processor.log
redirect_stderr=true
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs=60

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

; Set Celery priority higher than default (999)
; so, if rabbitmq is supervised, it will start first.
priority=1000

[program:celery.dispatcher.tg]
command=/usr/local/miniconda2/envs/edu/bin/celery worker -A chat_handlers -n dispatcher.tg@%%n -Q telegram --concurrency 1 --loglevel=DEBUG
directory=/home/app/edu
user=app
numprocs=1
stdout_logfile=/home/app/log/celery.dispatcher.tg.log
redirect_stderr=true
autostart=true
autorestart=true
startsecs=10
stopwaitsecs=60
killasgroup=true
priority=1000

[program:celery.dispatcher.fb]
command=/usr/local/miniconda2/envs/edu/bin/celery worker -A chat_handlers -n dispatcher.fb@%%n -Q facebook --concurrency 1 --loglevel=DEBUG
directory=/home/app/edu
user=app
numprocs=1
stdout_logfile=/home/app/log/celery.dispatcher.fb.log
redirect_stderr=true
autostart=true
autorestart=true
startsecs=10
stopwaitsecs=60
killasgroup=true
priority=1000


; ==================================
;  flower
; ==================================

[program:flower]
command=/usr/local/miniconda2/envs/edu/bin/celery flower -A workers --loglevel=DEBUG --conf=/home/app/edu/app_config.py
user=app
directory=/home/app/edu
stdout_logfile=/home/app/log/flower.log
redirect_stderr=true
autostart=true
autorestart=true
startsecs=10

